name: Android CI
on:
  push:
    branches:
      - main
      - dev
    paths-ignore:
      - '**/*.md'
  workflow_dispatch:

jobs:
  build-release:
    name: Build Release
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Decode and create xed.keystore
        run: echo "${{ secrets.KEYSTORE }}" | base64 -d > /tmp/xed.keystore

      - name: Decode and create signing.properties
        run: echo "${{ secrets.PROP }}" | base64 -d > /tmp/signing.properties

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Set Commit Hash
        id: commit_hash
        run: echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Build with Gradle
        run: ./gradlew assembleRelease && mv app/build/outputs/apk/release/*.apk app/karbon-${{ env.COMMIT_HASH }}.apk
        env:
          KEYSTORE_FILE: /tmp/xed.keystore
          SIGNING_PROPERTIES_FILE: /tmp/signing.properties
        continue-on-error: true

      - name: Archive APK
        uses: actions/upload-artifact@v4
        with:
          name: Karbon-Release
          path: app/karbon-${{ env.COMMIT_HASH }}.apk

      - name: Delete xed.keystore and signing.properties
        run: rm /tmp/xed.keystore /tmp/signing.properties

      - name: Send APK to Telegram
        if: ${{ success() }}
        run: |
          curl -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendDocument" \
          -F chat_id="-1002408175863" \
          -F message_thread_id="582" \
          -F caption="${{ github.event.head_commit.message }} by ${{ github.actor }}" \
          -F document=@"app/karbon-${{ env.COMMIT_HASH }}.apk"

  trigger-build-plugin-sdk:
    name: Build Plugin SDK
    runs-on: ubuntu-latest
    needs: build-release

    steps:
      - uses: actions/checkout@v4

      - name: Run Bash Script
        run: |
          # Bash script to gather files
          OUTPUT_DIR=./outputs
          CORE_DIR=core
          
          mkdir -p "$OUTPUT_DIR"
          MODULES=$(find "$CORE_DIR" -mindepth 1 -maxdepth 1 -type d)
          
          for MODULE in $MODULES; do
              FULL_PATH="$MODULE/build/intermediates/full_jar/release/createFullJarRelease/full.jar"
              if [[ -f "$FULL_PATH" ]]; then
                  MODULE_NAME=$(basename "$MODULE")
                  OUTPUT_JAR="$OUTPUT_DIR/$MODULE_NAME.jar"
                  cp "$FULL_PATH" "$OUTPUT_JAR"
              else
                  echo "Warning: not found : $MODULE"
              fi
          done

      - name: Archive Outputs
        uses: actions/upload-artifact@v4
        with:
          name: TriggerData
          path: outputs/