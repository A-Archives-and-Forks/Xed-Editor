com.rk.git.GitServer
com.rk.git.R
com.rk.git.GitServer: com.rk.git.GitServer INSTANCE
com.rk.git.GitServer: java.lang.String currentBranch
com.rk.git.GitServer: java.util.List branches
com.rk.git.GitServer: void createBranch(java.lang.String)
com.rk.git.GitServer: GitServer()
com.rk.git.GitServer: kotlin.Pair rm(java.io.File)
com.rk.git.GitServer: void push(boolean)
com.rk.git.GitServer: void checkoutBranch(java.lang.String)
com.rk.git.GitServer: void getCredentials(android.content.Context,com.rk.git.CredentialType,kotlin.jvm.functions.Function1)
com.rk.git.GitServer: void mergeWithBranch(java.lang.String)
com.rk.git.GitServer: java.util.List getBranches()
com.rk.git.R: R()
com.rk.git.GitServer: kotlin.Pair add(java.io.File)
com.rk.git.GitServer: void isFileInGitProject(java.io.File)
com.rk.git.GitServer: void checkoutCommit(java.lang.String)
com.rk.git.GitServer: void fetch()
com.rk.git.CredentialType: com.rk.git.CredentialType valueOf(java.lang.String)
com.rk.git.GitServer: kotlin.Pair commit(java.lang.String)
com.rk.git.CredentialType: com.rk.git.CredentialType[] values()
com.rk.git.GitServer: void deleteBranch(java.lang.String)
com.rk.git.GitServer: void reset(java.lang.String,boolean)
com.rk.git.GitServer: java.io.File currentGitProject()
com.rk.git.GitServer: void getChangesOnFile(java.io.File,kotlin.jvm.functions.Function1)
com.rk.git.GitServer: void setCredentials(android.content.Context,com.rk.git.CredentialType,java.lang.String)
com.rk.git.GitServer: kotlin.Pair pull()
com.rk.git.GitServer: void reset$default(com.rk.git.GitServer,java.lang.String,boolean,int,java.lang.Object)
com.rk.git.GitServer: void openGitProject(java.io.File)
com.rk.git.GitServer: void push$default(com.rk.git.GitServer,boolean,int,java.lang.Object)
com.rk.git.GitServer: java.lang.String getCurrentBranch()
com.rk.git.GitServer: void clone(java.lang.String,kotlin.jvm.functions.Function1)
